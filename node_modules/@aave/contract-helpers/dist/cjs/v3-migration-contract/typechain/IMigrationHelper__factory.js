"use strict";
/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IMigrationHelper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: 'ADDRESSES_PROVIDER',
        outputs: [
            {
                internalType: 'contract IPoolAddressesProvider',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'POOL',
        outputs: [
            {
                internalType: 'contract IPool',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'V2_POOL',
        outputs: [
            {
                internalType: 'contract ILendingPool',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'cacheATokens',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'assets',
                type: 'address[]',
            },
            {
                internalType: 'uint256[]',
                name: 'amounts',
                type: 'uint256[]',
            },
            {
                internalType: 'uint256[]',
                name: 'premiums',
                type: 'uint256[]',
            },
            {
                internalType: 'address',
                name: 'initiator',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'params',
                type: 'bytes',
            },
        ],
        name: 'executeOperation',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'asset',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getMigrationSupply',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address[]',
                name: 'assetsToMigrate',
                type: 'address[]',
            },
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'asset',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'rateMode',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct IMigrationHelper.RepaySimpleInput[]',
                name: 'positionsToRepay',
                type: 'tuple[]',
            },
            {
                components: [
                    {
                        internalType: 'contract IERC20WithPermit',
                        name: 'aToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'deadline',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint8',
                        name: 'v',
                        type: 'uint8',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'r',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 's',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct IMigrationHelper.PermitInput[]',
                name: 'permits',
                type: 'tuple[]',
            },
            {
                components: [
                    {
                        internalType: 'contract ICreditDelegationToken',
                        name: 'debtToken',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'value',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'deadline',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint8',
                        name: 'v',
                        type: 'uint8',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'r',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 's',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct IMigrationHelper.CreditDelegationInput[]',
                name: 'creditDelegationPermits',
                type: 'tuple[]',
            },
        ],
        name: 'migrate',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20WithPermit',
                        name: 'asset',
                        type: 'address',
                    },
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                    },
                ],
                internalType: 'struct IMigrationHelper.EmergencyTransferInput[]',
                name: 'emergencyInput',
                type: 'tuple[]',
            },
        ],
        name: 'rescueFunds',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
class IMigrationHelper__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IMigrationHelper__factory = IMigrationHelper__factory;
IMigrationHelper__factory.abi = _abi;
//# sourceMappingURL=IMigrationHelper__factory.js.map