import { ReservesHelperInput, UserReservesHelperInput } from '../index';
import { ReservesDataHumanized, UiPoolDataProviderContext, UserReserveData, UserReserveDataHumanized } from '../v3-UiPoolDataProvider-contract';
import { LegacyReservesData } from './types';
export * from './types';
export interface LegacyUiPoolDataProviderInterface {
    getReservesList: (args: ReservesHelperInput) => Promise<string[]>;
    getReservesData: (args: ReservesHelperInput) => Promise<LegacyReservesData>;
    getUserReservesData: (args: UserReservesHelperInput) => Promise<UserReserveData>;
    getReservesHumanized: (args: ReservesHelperInput) => Promise<ReservesDataHumanized>;
    getUserReservesHumanized: (args: UserReservesHelperInput) => Promise<{
        userReserves: UserReserveDataHumanized[];
        userEmodeCategoryId: number;
    }>;
}
/**
 * This class is only intended to be used with v2 markets
 * or v3 markets that do not have the v3.1 upgrade applied
 */
export declare class LegacyUiPoolDataProvider implements LegacyUiPoolDataProviderInterface {
    private readonly _contract;
    private readonly chainId;
    /**
     * Constructor
     * @param context The ui pool data provider context
     */
    constructor(context: UiPoolDataProviderContext);
    /**
     * Get the underlying asset address for each lending pool reserve
     */
    getReservesList({ lendingPoolAddressProvider, }: ReservesHelperInput): Promise<string[]>;
    /**
     * Get data for each lending pool reserve
     */
    getReservesData({ lendingPoolAddressProvider, }: ReservesHelperInput): Promise<LegacyReservesData>;
    /**
     * Get data for each user reserve on the lending pool
     */
    getUserReservesData({ lendingPoolAddressProvider, user, }: UserReservesHelperInput): Promise<UserReserveData>;
    getReservesHumanized({ lendingPoolAddressProvider, }: ReservesHelperInput): Promise<ReservesDataHumanized>;
    getUserReservesHumanized({ lendingPoolAddressProvider, user, }: UserReservesHelperInput): Promise<{
        userReserves: UserReserveDataHumanized[];
        userEmodeCategoryId: number;
    }>;
}
//# sourceMappingURL=index.d.ts.map