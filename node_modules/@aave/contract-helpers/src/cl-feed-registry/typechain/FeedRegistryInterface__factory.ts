/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from '@ethersproject/abstract-signer';
import { Contract } from 'ethers';
import { Provider } from '@ethersproject/providers';

import { FeedRegistryInterface } from './FeedRegistryInterface';

export class FeedRegistryInterface__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): FeedRegistryInterface {
    return (new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as unknown) as FeedRegistryInterface;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'quote',
        type: 'address',
      },
    ],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'quote',
        type: 'address',
      },
    ],
    name: 'description',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'base',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'quote',
        type: 'address',
      },
    ],
    name: 'latestRoundData',
    outputs: [
      {
        internalType: 'uint80',
        name: 'roundId',
        type: 'uint80',
      },
      {
        internalType: 'int256',
        name: 'answer',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'startedAt',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'updatedAt',
        type: 'uint256',
      },
      {
        internalType: 'uint80',
        name: 'answeredInRound',
        type: 'uint80',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];
